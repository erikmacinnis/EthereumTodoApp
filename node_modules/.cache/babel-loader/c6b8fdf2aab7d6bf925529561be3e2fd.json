{"ast":null,"code":"var _jsxFileName = \"/Users/erikmacinnis/Desktop/BlockChainWork/web3-coding-test/src/components/DisplayTasks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport todo from '../ethereum/todo.js';\nimport web3 from '../ethereum/web3';\nimport { Grid } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayTasks = _ref => {\n  _s();\n\n  let {\n    count\n  } = _ref;\n  const [tasks, setTasks] = useState([{\n    id: 0\n  }]);\n  useEffect(async () => {\n    await createTaskList();\n    await createFormattedTaskList();\n  }, []);\n\n  const checkTask = async id => {\n    const accounts = await web3.eth.getAccounts();\n    await todo.methods.checkTask(id).send({\n      from: accounts[0]\n    });\n  };\n\n  const createTaskList = async () => {\n    // const taskRows = [];\n    const initialTasks = [];\n    console.log('starting desplay task');\n    let i;\n\n    for (i = 1; i < count; i++) {\n      const task = await todo.methods.tasks(i).call();\n      console.log(task);\n      initialTasks.push(task);\n    }\n\n    console.log(initialTasks);\n    setTasks(initialTasks);\n  };\n\n  const createFormattedTaskList = () => {\n    console.log('starting formattedlist');\n    console.log(setTasks); // for (i = 1; i < count; i++){\n    //     if (i % 3 === 0) {\n    //         taskRows[i % 3 + 1] = (\n    //             <Grid.Row>\n    //                 <Grid.Column>\n    //                     <div className=\"ui left floated compact segment\">\n    //                         <div className=\"ui toggle checked checkbox\">\n    //                             <input\n    //                             type=\"checkbox\"\n    //                             name={initalTask[i-3].id}\n    //                             onClick={() => checkTask(initalTask[i-3].id)}\n    //                             ></input>\n    //                             <label>{initalTask[i-3].content}</label>\n    //                         </div>\n    //                     </div>\n    //                 </Grid.Column>\n    //                 <Grid.Column>\n    //                     <div className=\"ui left floated compact segment\">\n    //                         <div className=\"ui toggle checked checkbox\">\n    //                             <input\n    //                             type=\"checkbox\"\n    //                             name={initalTask[i-2].id}\n    //                             onClick={() => checkTask(initalTask[i-2].id)}\n    //                             ></input>\n    //                             <label>{initalTask[i-2].content}</label>\n    //                         </div>\n    //                     </div>\n    //                 </Grid.Column>\n    //                 <Grid.Column>\n    //                     <div className=\"ui left floated compact segment\">\n    //                         <div className=\"ui toggle checked checkbox\">\n    //                             <input\n    //                             type=\"checkbox\"\n    //                             name={initalTask[i-1].id}\n    //                             onClick={() => checkTask(initalTask[i-1].id)}\n    //                             ></input>\n    //                             <label>{initalTask[i-1].content}</label>\n    //                         </div>\n    //                     </div>\n    //                 </Grid.Column>\n    //             </Grid.Row>\n    //         )\n    //     }\n    //     console.log(taskRows[0])\n    // }\n    // const mod = i % 3;\n    // if (mod != 3){\n    //     if (mod == 1){\n    //         const taskRow = (\n    //             <Grid.Row>\n    //                 <Grid.Column>\n    //                     <div className=\"ui left floated compact segment\">\n    //                         <div className=\"ui toggle checked checkbox\">\n    //                             <input\n    //                             type=\"checkbox\"\n    //                             name={initalTask[i-1].id}\n    //                             onClick={() => checkTask(initalTask[i-1].id)}\n    //                             ></input>\n    //                             <label>{initalTask[i-1].content}</label>\n    //                         </div>\n    //                     </div>\n    //                 </Grid.Column>\n    //             </Grid.Row>\n    //         )\n    //         taskRows.push(taskRow);\n    //     }\n    //     else {\n    //         const taskRow = (\n    //             <Grid.Row>\n    //                 <Grid.Column>\n    //                     <div className=\"ui left floated compact segment\">\n    //                         <div className=\"ui toggle checked checkbox\">\n    //                             <input\n    //                             type=\"checkbox\"\n    //                             name={initalTask[i-2].id}\n    //                             onClick={() => checkTask(initalTask[i-2].id)}\n    //                             ></input>\n    //                             <label>{initalTask[i-2].content}</label>\n    //                         </div>\n    //                     </div>\n    //                 </Grid.Column>\n    //                 <Grid.Column>\n    //                     <div className=\"ui left floated compact segment\">\n    //                         <div className=\"ui toggle checked checkbox\">\n    //                             <input\n    //                             type=\"checkbox\"\n    //                             name={initalTask[i-1].id}\n    //                             onClick={() => checkTask(initalTask[i-1].id)}\n    //                             ></input>\n    //                             <label>{initalTask[i-1].content}</label>\n    //                         </div>\n    //                     </div>\n    //                 </Grid.Column>\n    //             </Grid.Row>\n    //         )\n    //         taskRows.push(taskRow);\n    //     }\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [tasks.map((task, index) => {\n      console.log(task);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ui left floated compact segment\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ui toggle checked checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: task.id,\n              onClick: () => checkTask(task.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: task.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this);\n    }), \"hello this actually works\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DisplayTasks, \"RS+X5SUxiIthRArTgp7IehHcxeg=\");\n\n_c = DisplayTasks;\nexport default DisplayTasks;\n/* {initalTasks.map((task, index) => {\n                    <React.Fragment key={index}>\n                        <h1>{task.id}</h1>\n                        <div className=\"ui left floated compact segment\">\n                            <div className=\"ui toggle checked checkbox\">\n                                <input \n                                type=\"checkbox\" \n                                name={task.id}\n                                onClick={() => checkTask(task.id)}\n                                ></input>\n                                <label>{task.content}</label>\n                            </div>\n                        </div>\n                    </ React.Fragment>\n                })} */\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayTasks\");","map":{"version":3,"sources":["/Users/erikmacinnis/Desktop/BlockChainWork/web3-coding-test/src/components/DisplayTasks.js"],"names":["React","useEffect","useState","todo","web3","Grid","DisplayTasks","count","tasks","setTasks","id","createTaskList","createFormattedTaskList","checkTask","accounts","eth","getAccounts","methods","send","from","initialTasks","console","log","i","task","call","push","map","index","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,IAAT,QAAqB,mBAArB;;;AAEA,MAAMC,YAAY,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAE9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAC;AAACQ,IAAAA,EAAE,EAAE;AAAL,GAAD,CAAD,CAAlC;AAEAT,EAAAA,SAAS,CAAC,YAAW;AACjB,UAAMU,cAAc,EAApB;AACA,UAAMC,uBAAuB,EAA7B;AACH,GAHQ,EAGP,EAHO,CAAT;;AAKA,QAAMC,SAAS,GAAG,MAAMH,EAAN,IAAa;AAC3B,UAAMI,QAAQ,GAAG,MAAMV,IAAI,CAACW,GAAL,CAASC,WAAT,EAAvB;AACA,UAAMb,IAAI,CAACc,OAAL,CAAaJ,SAAb,CAAuBH,EAAvB,EAA2BQ,IAA3B,CAAgC;AAACC,MAAAA,IAAI,EAAEL,QAAQ,CAAC,CAAD;AAAf,KAAhC,CAAN;AACH,GAHD;;AAKA,QAAMH,cAAc,GAAG,YAAY;AAC/B;AACA,UAAMS,YAAY,GAAG,EAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,QAAIC,CAAJ;;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGhB,KAAhB,EAAuBgB,CAAC,EAAxB,EAA2B;AACvB,YAAMC,IAAI,GAAG,MAAMrB,IAAI,CAACc,OAAL,CAAaT,KAAb,CAAmBe,CAAnB,EAAsBE,IAAtB,EAAnB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAJ,MAAAA,YAAY,CAACM,IAAb,CAAkBF,IAAlB;AACH;;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACAX,IAAAA,QAAQ,CAACW,YAAD,CAAR;AACH,GAZD;;AAcA,QAAMR,uBAAuB,GAAG,MAAM;AAClCS,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYb,QAAZ,EAFkC,CAGlC;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACF,GAvGD;;AAyGA,sBACI;AAAA,eACKD,KAAK,CAACmB,GAAN,CAAU,CAACH,IAAD,EAAOI,KAAP,KAAiB;AACxBP,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACA,0BACI;AAAiB,QAAA,SAAS,EAAC,cAA3B;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,iCAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,oCACI;AACA,cAAA,IAAI,EAAC,UADL;AAEA,cAAA,IAAI,EAAEA,IAAI,CAACd,EAFX;AAGA,cAAA,OAAO,EAAE,MAAMG,SAAS,CAACW,IAAI,CAACd,EAAN;AAHxB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAMI;AAAA,wBAAQc,IAAI,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,cADJ;AAcC,KAhBJ,CADL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA3JD;;GAAMtB,Y;;KAAAA,Y;AA6JN,eAAeA,YAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport todo from '../ethereum/todo.js';\nimport web3 from '../ethereum/web3';\nimport { Grid } from 'semantic-ui-react';\n\nconst DisplayTasks = ({count}) => {\n\n    const [tasks, setTasks] = useState([{id: 0}]);\n\n    useEffect(async() => {\n        await createTaskList();\n        await createFormattedTaskList();\n    },[])\n\n    const checkTask = async(id) => {\n        const accounts = await web3.eth.getAccounts();\n        await todo.methods.checkTask(id).send({from: accounts[0]});\n    }\n\n    const createTaskList = async () => {\n        // const taskRows = [];\n        const initialTasks = [];\n        console.log('starting desplay task')\n        let i;\n        for (i = 1; i < count; i++){\n            const task = await todo.methods.tasks(i).call();\n            console.log(task);\n            initialTasks.push(task);          \n        }\n        console.log(initialTasks);\n        setTasks(initialTasks);\n    }\n\n    const createFormattedTaskList = () => {\n        console.log('starting formattedlist')\n        console.log(setTasks);\n        // for (i = 1; i < count; i++){\n \n       //     if (i % 3 === 0) {\n       //         taskRows[i % 3 + 1] = (\n       //             <Grid.Row>\n       //                 <Grid.Column>\n       //                     <div className=\"ui left floated compact segment\">\n       //                         <div className=\"ui toggle checked checkbox\">\n       //                             <input\n       //                             type=\"checkbox\"\n       //                             name={initalTask[i-3].id}\n       //                             onClick={() => checkTask(initalTask[i-3].id)}\n       //                             ></input>\n       //                             <label>{initalTask[i-3].content}</label>\n       //                         </div>\n       //                     </div>\n       //                 </Grid.Column>\n       //                 <Grid.Column>\n       //                     <div className=\"ui left floated compact segment\">\n       //                         <div className=\"ui toggle checked checkbox\">\n       //                             <input\n       //                             type=\"checkbox\"\n       //                             name={initalTask[i-2].id}\n       //                             onClick={() => checkTask(initalTask[i-2].id)}\n       //                             ></input>\n       //                             <label>{initalTask[i-2].content}</label>\n       //                         </div>\n       //                     </div>\n       //                 </Grid.Column>\n       //                 <Grid.Column>\n       //                     <div className=\"ui left floated compact segment\">\n       //                         <div className=\"ui toggle checked checkbox\">\n       //                             <input\n       //                             type=\"checkbox\"\n       //                             name={initalTask[i-1].id}\n       //                             onClick={() => checkTask(initalTask[i-1].id)}\n       //                             ></input>\n       //                             <label>{initalTask[i-1].content}</label>\n       //                         </div>\n       //                     </div>\n       //                 </Grid.Column>\n       //             </Grid.Row>\n       //         )\n       //     }\n       //     console.log(taskRows[0])\n       // }\n       // const mod = i % 3;\n       // if (mod != 3){\n       //     if (mod == 1){\n       //         const taskRow = (\n       //             <Grid.Row>\n       //                 <Grid.Column>\n       //                     <div className=\"ui left floated compact segment\">\n       //                         <div className=\"ui toggle checked checkbox\">\n       //                             <input\n       //                             type=\"checkbox\"\n       //                             name={initalTask[i-1].id}\n       //                             onClick={() => checkTask(initalTask[i-1].id)}\n       //                             ></input>\n       //                             <label>{initalTask[i-1].content}</label>\n       //                         </div>\n       //                     </div>\n       //                 </Grid.Column>\n       //             </Grid.Row>\n       //         )\n       //         taskRows.push(taskRow);\n       //     }\n       //     else {\n       //         const taskRow = (\n       //             <Grid.Row>\n       //                 <Grid.Column>\n       //                     <div className=\"ui left floated compact segment\">\n       //                         <div className=\"ui toggle checked checkbox\">\n       //                             <input\n       //                             type=\"checkbox\"\n       //                             name={initalTask[i-2].id}\n       //                             onClick={() => checkTask(initalTask[i-2].id)}\n       //                             ></input>\n       //                             <label>{initalTask[i-2].content}</label>\n       //                         </div>\n       //                     </div>\n       //                 </Grid.Column>\n       //                 <Grid.Column>\n       //                     <div className=\"ui left floated compact segment\">\n       //                         <div className=\"ui toggle checked checkbox\">\n       //                             <input\n       //                             type=\"checkbox\"\n       //                             name={initalTask[i-1].id}\n       //                             onClick={() => checkTask(initalTask[i-1].id)}\n       //                             ></input>\n       //                             <label>{initalTask[i-1].content}</label>\n       //                         </div>\n       //                     </div>\n       //                 </Grid.Column>\n       //             </Grid.Row>\n       //         )\n          \n       //         taskRows.push(taskRow);\n       //     }\n       // }\n    }\n\n    return (\n        <div>\n            {tasks.map((task, index) => {\n                console.log(task);\n                return (\n                    <div key={index} className=\"ui container\">\n                        <div className=\"ui left floated compact segment\">\n                            <div className=\"ui toggle checked checkbox\">\n                                <input \n                                type=\"checkbox\" \n                                name={task.id}\n                                onClick={() => checkTask(task.id)}\n                                ></input>\n                                <label>{task.content}</label>\n                            </div>\n                        </div>\n                    </ div>\n                );\n                })}\n            hello this actually works\n        </div>\n    )\n}\n\nexport default DisplayTasks;\n\n/* {initalTasks.map((task, index) => {\n                    <React.Fragment key={index}>\n                        <h1>{task.id}</h1>\n                        <div className=\"ui left floated compact segment\">\n                            <div className=\"ui toggle checked checkbox\">\n                                <input \n                                type=\"checkbox\" \n                                name={task.id}\n                                onClick={() => checkTask(task.id)}\n                                ></input>\n                                <label>{task.content}</label>\n                            </div>\n                        </div>\n                    </ React.Fragment>\n                })} */"]},"metadata":{},"sourceType":"module"}