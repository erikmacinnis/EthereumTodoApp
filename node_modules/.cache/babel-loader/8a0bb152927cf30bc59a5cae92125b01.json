{"ast":null,"code":"var _jsxFileName = \"/Users/erikmacinnis/Desktop/EthProjects/EthereumTodoApp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport todo from './ethereum/todo.js';\nimport DisplayTasks from './components/DisplayTasks';\nimport CreateTask from './components/CreateTask.js';\nimport DropDownList from './components/DropDown.js';\nimport Loader from './components/Loader';\nimport './css/stylesheet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [count, setCount] = useState(0);\n  const [completed, setCompleted] = useState([]);\n  const [resetTasks, setResetTasks] = useState(false);\n  useEffect(() => {\n    async function initialFunction() {\n      console.log(\"initial\");\n      const initialCount = await todo.methods.count().call();\n      setCount(initialCount);\n      setLoading(false);\n    }\n\n    initialFunction();\n  }, []);\n  useEffect(() => {\n    const chainId = 4;\n\n    async function switchNetwork() {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{\n          chainId: \"0x\" + chainId.toString(16)\n        }]\n      });\n      setLoading(false);\n    }\n\n    setTimeout(checkSwitch, 1000);\n\n    function checkSwitch() {\n      console.log(window.ethereum.networkVersion);\n\n      if (window.ethereum.networkVersion === chainId) {\n        console.log(\"switching\");\n        switchNetwork();\n      }\n    }\n  }, []);\n\n  if (!loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui container\",\n      children: [/*#__PURE__*/_jsxDEV(DisplayTasks, {\n        resetTasks: resetTasks,\n        count: count,\n        completed: completed,\n        setCompleted: setCompleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CreateTask, {\n        resetTasks: resetTasks,\n        setResetTasks: setResetTasks,\n        setCount: setCount,\n        count: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DropDownList, {\n        completed: completed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"4vdYWh3HukjqQNeTMy/kmA620pM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/erikmacinnis/Desktop/EthProjects/EthereumTodoApp/src/App.js"],"names":["React","useEffect","useState","todo","DisplayTasks","CreateTask","DropDownList","Loader","App","loading","setLoading","count","setCount","completed","setCompleted","resetTasks","setResetTasks","initialFunction","console","log","initialCount","methods","call","chainId","switchNetwork","window","ethereum","request","method","params","toString","setTimeout","checkSwitch","networkVersion"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,sBAAP;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAegB,eAAf,GAAiC;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,YAAMC,YAAY,GAAG,MAAMjB,IAAI,CAACkB,OAAL,CAAaV,KAAb,GAAqBW,IAArB,EAA3B;AACAV,MAAAA,QAAQ,CAACQ,YAAD,CAAR;AACAV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AACDO,IAAAA,eAAe;AAClB,GARQ,EAQN,EARM,CAAT;AAUAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMsB,OAAO,GAAG,CAAhB;;AACA,mBAAeC,aAAf,GAA+B;AAC3B,YAAMC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAACC,QAAAA,MAAM,EAAE,4BAAT;AAAuCC,QAAAA,MAAM,EAAE,CAAC;AAACN,UAAAA,OAAO,EAAE,OAAOA,OAAO,CAACO,QAAR,CAAiB,EAAjB;AAAjB,SAAD;AAA/C,OAAxB,CAAN;AACApB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AACDqB,IAAAA,UAAU,CAACC,WAAD,EAAc,IAAd,CAAV;;AAEA,aAASA,WAAT,GAAsB;AAClBd,MAAAA,OAAO,CAACC,GAAR,CAAYM,MAAM,CAACC,QAAP,CAAgBO,cAA5B;;AACA,UAAIR,MAAM,CAACC,QAAP,CAAgBO,cAAhB,KAAmCV,OAAvC,EAAgD;AAC5CL,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAK,QAAAA,aAAa;AAChB;AACJ;AACJ,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAI,CAACf,OAAL,EAAa;AACT,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI,QAAC,YAAD;AAAc,QAAA,UAAU,EAAEM,UAA1B;AAAsC,QAAA,KAAK,EAAEJ,KAA7C;AAAoD,QAAA,SAAS,EAAEE,SAA/D;AAA0E,QAAA,YAAY,EAAEC;AAAxF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,UAAU,EAAEC,UAAxB;AAAoC,QAAA,aAAa,EAAEC,aAAnD;AAAkE,QAAA,QAAQ,EAAEJ,QAA5E;AAAsF,QAAA,KAAK,EAAED;AAA7F;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,YAAD;AAAc,QAAA,SAAS,EAAEE;AAAzB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAED,sBACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAhDD;;GAAML,G;;KAAAA,G;AAkDN,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport todo from './ethereum/todo.js';\nimport DisplayTasks from './components/DisplayTasks';\nimport CreateTask from './components/CreateTask.js';\nimport DropDownList from './components/DropDown.js';\nimport Loader from './components/Loader'\nimport './css/stylesheet.css';\n\n\nconst App = () => {\n\n    const [loading, setLoading] = useState(true);\n    const [count, setCount] = useState(0);\n    const [completed, setCompleted] = useState([]);\n    const [resetTasks, setResetTasks] = useState(false);\n\n    useEffect(() => {\n        async function initialFunction() {\n            console.log(\"initial\")\n            const initialCount = await todo.methods.count().call();\n            setCount(initialCount);\n            setLoading(false);\n        }\n        initialFunction();\n    }, [])\n\n    useEffect(() => {\n        const chainId = 4;\n        async function switchNetwork() {\n            await window.ethereum.request({method: 'wallet_switchEthereumChain', params: [{chainId: \"0x\" + chainId.toString(16)}]})\n            setLoading(false)\n        }\n        setTimeout(checkSwitch, 1000);\n\n        function checkSwitch(){   \n            console.log(window.ethereum.networkVersion)\n            if (window.ethereum.networkVersion === chainId) {\n                console.log(\"switching\")\n                switchNetwork()\n            }\n        }\n    }, [])\n\n    if (!loading){\n        return (\n            <div className=\"ui container\">\n                <DisplayTasks resetTasks={resetTasks} count={count} completed={completed} setCompleted={setCompleted}/>\n                <CreateTask resetTasks={resetTasks} setResetTasks={setResetTasks} setCount={setCount} count={count}/>\n                <br></br>\n                <DropDownList completed={completed} />\n            </div>\n        )\n    }\n\n    return(\n        <Loader/>\n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}