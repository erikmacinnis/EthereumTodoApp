{"ast":null,"code":"var _jsxFileName = \"/Users/erikmacinnis/Desktop/BlockChainWork/web3-coding-test/src/App.js\";\nimport React from 'react';\nimport todo from './ethereum/todo.js';\nimport web3 from './ethereum/web3.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      address: '',\n      errorMessage: '',\n      tasks: []\n    };\n  }\n\n  async compoundDidMount() {\n    const count = await web3.methods.count().call();\n\n    if (count > 0) {\n      this.createTasksList();\n    }\n\n    console.log('list is empty');\n  }\n\n  async createTasksList() {\n    const count = await web3.methods.count().call();\n    const tasksList = [];\n\n    for (let i = 0; i <= count; i++) {\n      const task = await web3.methods.tasks(i).call();\n      tasksList.push(task);\n    }\n\n    console.log(tasksList[0]);\n  }\n\n  async createTask(content) {\n    const accounts = await web3.eth.getAccounts();\n\n    try {\n      await todo.methods.createTask(content).send();\n    } catch (err) {\n      this.setState({\n        errorMessage: err.message\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/erikmacinnis/Desktop/BlockChainWork/web3-coding-test/src/App.js"],"names":["React","todo","web3","App","Component","state","address","errorMessage","tasks","compoundDidMount","count","methods","call","createTasksList","console","log","tasksList","i","task","push","createTask","content","accounts","eth","getAccounts","send","err","setState","message","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BC,KAF8B,GAEtB;AAACC,MAAAA,OAAO,EAAE,EAAV;AAAcC,MAAAA,YAAY,EAAE,EAA5B;AAAgCC,MAAAA,KAAK,EAAE;AAAvC,KAFsB;AAAA;;AAIR,QAAhBC,gBAAgB,GAAG;AACrB,UAAMC,KAAK,GAAG,MAAMR,IAAI,CAACS,OAAL,CAAaD,KAAb,GAAqBE,IAArB,EAApB;;AACA,QAAIF,KAAK,GAAG,CAAZ,EAAc;AACV,WAAKG,eAAL;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;;AAGoB,QAAfF,eAAe,GAAG;AACpB,UAAMH,KAAK,GAAG,MAAMR,IAAI,CAACS,OAAL,CAAaD,KAAb,GAAqBE,IAArB,EAApB;AACA,UAAMI,SAAS,GAAG,EAAlB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIP,KAArB,EAA4BO,CAAC,EAA7B,EAAiC;AAC7B,YAAMC,IAAI,GAAG,MAAMhB,IAAI,CAACS,OAAL,CAAaH,KAAb,CAAmBS,CAAnB,EAAsBL,IAAtB,EAAnB;AACAI,MAAAA,SAAS,CAACG,IAAV,CAAeD,IAAf;AACH;;AACDJ,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAS,CAAC,CAAD,CAArB;AACH;;AAEe,QAAVI,UAAU,CAACC,OAAD,EAAU;AACtB,UAAMC,QAAQ,GAAG,MAAMpB,IAAI,CAACqB,GAAL,CAASC,WAAT,EAAvB;;AACA,QAAI;AACA,YAAMvB,IAAI,CAACU,OAAL,CAAaS,UAAb,CAAwBC,OAAxB,EAAiCI,IAAjC,EAAN;AACH,KAFD,CAGA,OAAOC,GAAP,EAAY;AACR,WAAKC,QAAL,CAAc;AAACpB,QAAAA,YAAY,EAAEmB,GAAG,CAACE;AAAnB,OAAd;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AArC6B;;AAyClC,eAAe1B,GAAf","sourcesContent":["import React from 'react';\nimport todo from './ethereum/todo.js';\nimport web3 from './ethereum/web3.js';\n\nclass App extends React.Component {\n\n    state = {address: '', errorMessage: '', tasks: []}\n\n    async compoundDidMount() {\n        const count = await web3.methods.count().call();\n        if (count > 0){\n            this.createTasksList();\n        }\n        console.log('list is empty');\n    }\n\n\n    async createTasksList() {\n        const count = await web3.methods.count().call();\n        const tasksList = [];\n        for (let i = 0; i <= count; i++) {\n            const task = await web3.methods.tasks(i).call();\n            tasksList.push(task);\n        }\n        console.log(tasksList[0]);\n    }\n\n    async createTask(content) {\n        const accounts = await web3.eth.getAccounts();\n        try {\n            await todo.methods.createTask(content).send()\n        }\n        catch (err) {\n            this.setState({errorMessage: err.message})\n        }\n    }\n\n    render() {\n        return (\n            <h1>hello</h1>\n        );\n    }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}