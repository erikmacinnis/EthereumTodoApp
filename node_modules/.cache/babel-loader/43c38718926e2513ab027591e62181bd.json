{"ast":null,"code":"var _jsxFileName = \"/Users/erikmacinnis/Desktop/BlockChainWork/web3-coding-test/src/components/DisplayTasks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport todo from '../ethereum/todo.js';\nimport web3 from '../ethereum/web3';\nimport { Grid } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayTasks = _ref => {\n  _s();\n\n  let {\n    count\n  } = _ref;\n  const [tasks, setTasks] = useState([{\n    id: 0\n  }]);\n  useEffect(async () => {\n    await createTaskList();\n  }, []);\n\n  const checkTask = async id => {\n    const accounts = await web3.eth.getAccounts();\n    await todo.methods.checkTask(id).send({\n      from: accounts[0]\n    });\n  };\n\n  const createTaskList = async () => {\n    // const taskRows = [];\n    const initialTasks = [];\n    console.log('starting desplay task');\n    let i;\n\n    for (i = 1; i < count; i++) {\n      const task = await todo.methods.tasks(i).call();\n      console.log(task);\n      initialTasks.push(task);\n    }\n\n    console.log(initialTasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [tasks[3].id, \"hello this actually works\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DisplayTasks, \"RS+X5SUxiIthRArTgp7IehHcxeg=\");\n\n_c = DisplayTasks;\nexport default DisplayTasks;\n/* {initalTasks.map((task, index) => {\n                    <React.Fragment key={index}>\n                        <h1>{task.id}</h1>\n                        <div className=\"ui left floated compact segment\">\n                            <div className=\"ui toggle checked checkbox\">\n                                <input \n                                type=\"checkbox\" \n                                name={task.id}\n                                onClick={() => checkTask(task.id)}\n                                ></input>\n                                <label>{task.content}</label>\n                            </div>\n                        </div>\n                    </ React.Fragment>\n                })} */\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayTasks\");","map":{"version":3,"sources":["/Users/erikmacinnis/Desktop/BlockChainWork/web3-coding-test/src/components/DisplayTasks.js"],"names":["React","useEffect","useState","todo","web3","Grid","DisplayTasks","count","tasks","setTasks","id","createTaskList","checkTask","accounts","eth","getAccounts","methods","send","from","initialTasks","console","log","i","task","call","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,IAAT,QAAqB,mBAArB;;;AAEA,MAAMC,YAAY,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAE9B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAC;AAACQ,IAAAA,EAAE,EAAE;AAAL,GAAD,CAAD,CAAlC;AAEAT,EAAAA,SAAS,CAAC,YAAY;AAClB,UAAMU,cAAc,EAApB;AACH,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMC,SAAS,GAAG,MAAMF,EAAN,IAAa;AAC3B,UAAMG,QAAQ,GAAG,MAAMT,IAAI,CAACU,GAAL,CAASC,WAAT,EAAvB;AACA,UAAMZ,IAAI,CAACa,OAAL,CAAaJ,SAAb,CAAuBF,EAAvB,EAA2BO,IAA3B,CAAgC;AAACC,MAAAA,IAAI,EAAEL,QAAQ,CAAC,CAAD;AAAf,KAAhC,CAAN;AACH,GAHD;;AAKA,QAAMF,cAAc,GAAG,YAAY;AAC/B;AACA,UAAMQ,YAAY,GAAG,EAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,QAAIC,CAAJ;;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGf,KAAhB,EAAuBe,CAAC,EAAxB,EAA2B;AACvB,YAAMC,IAAI,GAAG,MAAMpB,IAAI,CAACa,OAAL,CAAaR,KAAb,CAAmBc,CAAnB,EAAsBE,IAAtB,EAAnB;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAJ,MAAAA,YAAY,CAACM,IAAb,CAAkBF,IAAlB;AACH;;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACH,GAXD;;AAaA,sBACI;AAAA,eACKX,KAAK,CAAC,CAAD,CAAL,CAASE,EADd;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAhCD;;GAAMJ,Y;;KAAAA,Y;AAkCN,eAAeA,YAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport todo from '../ethereum/todo.js';\nimport web3 from '../ethereum/web3';\nimport { Grid } from 'semantic-ui-react';\n\nconst DisplayTasks = ({count}) => {\n\n    const [tasks, setTasks] = useState([{id: 0}]);\n\n    useEffect(async () => {\n        await createTaskList();\n    },[])\n\n    const checkTask = async(id) => {\n        const accounts = await web3.eth.getAccounts();\n        await todo.methods.checkTask(id).send({from: accounts[0]});\n    }\n\n    const createTaskList = async () => {\n        // const taskRows = [];\n        const initialTasks = [];\n        console.log('starting desplay task')\n        let i;\n        for (i = 1; i < count; i++){\n            const task = await todo.methods.tasks(i).call();\n            console.log(task);\n            initialTasks.push(task);          \n        }\n        console.log(initialTasks);\n    }\n\n    return (\n        <div>\n            {tasks[3].id}\n            hello this actually works\n        </div>\n    )\n}\n\nexport default DisplayTasks;\n\n/* {initalTasks.map((task, index) => {\n                    <React.Fragment key={index}>\n                        <h1>{task.id}</h1>\n                        <div className=\"ui left floated compact segment\">\n                            <div className=\"ui toggle checked checkbox\">\n                                <input \n                                type=\"checkbox\" \n                                name={task.id}\n                                onClick={() => checkTask(task.id)}\n                                ></input>\n                                <label>{task.content}</label>\n                            </div>\n                        </div>\n                    </ React.Fragment>\n                })} */"]},"metadata":{},"sourceType":"module"}