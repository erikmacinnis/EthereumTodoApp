{"ast":null,"code":"var _jsxFileName = \"/Users/erikmacinnis/Desktop/EthProjects/EthereumTodoApp/src/components/CreateTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport web3 from '../ethereum/web3';\nimport todo from '../ethereum/todo';\nimport { Button, Form } from 'semantic-ui-react';\nimport Loader from './InlineLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateTask = _ref => {\n  _s();\n\n  let {\n    setCount,\n    count,\n    setResetTasks,\n    resetTasks\n  } = _ref;\n  const [content, setContent] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const createTask = async event => {\n    event.preventDefault();\n    setLoading(true);\n    setCount(parseInt(count) + 1);\n    const accounts = await web3.eth.getAccounts();\n\n    try {\n      await todo.methods.createTask(content).send({\n        from: accounts[0]\n      });\n    } catch (err) {\n      window.alert(err);\n      setLoading(false);\n    }\n\n    setLoading(false);\n    setResetTasks(!resetTasks);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"createTask\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          fontSize: \"15px\",\n          Color: \"#181818\"\n        },\n        children: \"Create a Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: content,\n        placeholder: \"I will brush my teeth\",\n        onChange: event => setContent(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"ui black button\",\n      type: \"submit\",\n      onClick: event => createTask(event),\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"A task may take up to 30 seconds to be added or removed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateTask, \"VabgoSeXFgE+wWf3JZt8fyksZ90=\");\n\n_c = CreateTask;\nexport default CreateTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTask\");","map":{"version":3,"sources":["/Users/erikmacinnis/Desktop/EthProjects/EthereumTodoApp/src/components/CreateTask.js"],"names":["React","useState","web3","todo","Button","Form","Loader","CreateTask","setCount","count","setResetTasks","resetTasks","content","setContent","loading","setLoading","createTask","event","preventDefault","parseInt","accounts","eth","getAccounts","methods","send","from","err","window","alert","fontSize","Color","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;;;AAEA,MAAMC,UAAU,GAAG,QAAkD;AAAA;;AAAA,MAAjD;AAACC,IAAAA,QAAD;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,aAAlB;AAAiCC,IAAAA;AAAjC,GAAiD;AAEjE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMe,UAAU,GAAG,MAAMC,KAAN,IAAgB;AAC/BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAP,IAAAA,QAAQ,CAACW,QAAQ,CAACV,KAAD,CAAR,GAAkB,CAAnB,CAAR;AACA,UAAMW,QAAQ,GAAG,MAAMlB,IAAI,CAACmB,GAAL,CAASC,WAAT,EAAvB;;AACA,QAAI;AACA,YAAMnB,IAAI,CAACoB,OAAL,CAAaP,UAAb,CAAwBJ,OAAxB,EAAiCY,IAAjC,CAAsC;AAACC,QAAAA,IAAI,EAAEL,QAAQ,CAAC,CAAD;AAAf,OAAtC,CAAN;AACH,KAFD,CAEE,OAAMM,GAAN,EAAW;AACTC,MAAAA,MAAM,CAACC,KAAP,CAAaF,GAAb;AACAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AACDA,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAL,IAAAA,aAAa,CAAC,CAACC,UAAF,CAAb;AACH,GAbD;;AAeA,MAAIG,OAAJ,EAAa;AACT,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAA,8BACI;AAAO,QAAA,KAAK,EAAE;AAACe,UAAAA,QAAQ,EAAE,MAAX;AAAmBC,UAAAA,KAAK,EAAE;AAA1B,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACA,QAAA,KAAK,EAAIlB,OADT;AAEA,QAAA,WAAW,EAAC,uBAFZ;AAGA,QAAA,QAAQ,EAAEK,KAAK,IAAIJ,UAAU,CAACI,KAAK,CAACc,MAAN,CAAaC,KAAd;AAH7B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,MAAD;AACA,MAAA,SAAS,EAAC,iBADV;AAEA,MAAA,IAAI,EAAC,QAFL;AAGA,MAAA,OAAO,EAAGf,KAAD,IAAWD,UAAU,CAACC,KAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAzCD;;GAAMV,U;;KAAAA,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport web3 from '../ethereum/web3';\nimport todo from '../ethereum/todo';\nimport { Button, Form } from 'semantic-ui-react';\nimport Loader from './InlineLoader';\n\nconst CreateTask = ({setCount, count, setResetTasks, resetTasks}) => {\n\n    const [content, setContent] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const createTask = async(event) => {\n        event.preventDefault();\n        setLoading(true);\n        setCount(parseInt(count) + 1);\n        const accounts = await web3.eth.getAccounts();\n        try {\n            await todo.methods.createTask(content).send({from: accounts[0]});\n        } catch(err) {\n            window.alert(err)\n            setLoading(false);\n        }\n        setLoading(false);\n        setResetTasks(!resetTasks);\n    }\n\n    if (loading) {\n        return <Loader/>;\n    }\n\n    return (\n        <Form className=\"createTask\">\n            <Form.Field>\n                <label style={{fontSize: \"15px\", Color: \"#181818\"}}>Create a Task</label>\n                <input \n                value = {content}\n                placeholder='I will brush my teeth' \n                onChange={event => setContent(event.target.value)}/>\n            </Form.Field>\n            <Button \n            className=\"ui black button\"\n            type='submit'\n            onClick={(event) => createTask(event)}\n            >Create</Button>\n            <h5>A task may take up to 30 seconds to be added or removed</h5>\n        </Form>\n    )\n}\n\nexport default CreateTask;"]},"metadata":{},"sourceType":"module"}