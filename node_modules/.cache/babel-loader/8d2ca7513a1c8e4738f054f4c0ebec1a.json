{"ast":null,"code":"var _jsxFileName = \"/Users/erikmacinnis/Desktop/BlockChainWork/web3-coding-test/src/components/DisplayTasks.js\";\nimport React, { useEffect, useState } from \"react\";\nimport todo from '../ethereum/todo.js';\nimport web3 from '../ethereum/web3';\nimport { Grid } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplayTasks = _ref => {\n  let {\n    count\n  } = _ref;\n\n  const checkTask = async id => {\n    const accounts = await web3.eth.getAccounts();\n    await todo.methods.checkTask(id).send({\n      from: accounts[0]\n    });\n  };\n\n  const createTaskList = () => {\n    // const taskRows = [];\n    const initialTasks = [];\n    console.log('starting desplay task');\n    let i;\n\n    for (i = 1; i < count; i++) {\n      pushToInitialTasks(i, initialTasks);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: initialTasks[0].id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this);\n  };\n\n  const pushToInitialTasks = async (i, initialTasks) => {\n    try {\n      const task = await todo.methods.tasks(i).call();\n      console.log(task);\n      initialTasks.push(task);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [createTaskList(), \"hello this actually works\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DisplayTasks;\nexport default DisplayTasks;\n/* {initalTasks.map((task, index) => {\n                    <React.Fragment key={index}>\n                        <h1>{task.id}</h1>\n                        <div className=\"ui left floated compact segment\">\n                            <div className=\"ui toggle checked checkbox\">\n                                <input \n                                type=\"checkbox\" \n                                name={task.id}\n                                onClick={() => checkTask(task.id)}\n                                ></input>\n                                <label>{task.content}</label>\n                            </div>\n                        </div>\n                    </ React.Fragment>\n                })} */\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayTasks\");","map":{"version":3,"sources":["/Users/erikmacinnis/Desktop/BlockChainWork/web3-coding-test/src/components/DisplayTasks.js"],"names":["React","useEffect","useState","todo","web3","Grid","DisplayTasks","count","checkTask","id","accounts","eth","getAccounts","methods","send","from","createTaskList","initialTasks","console","log","i","pushToInitialTasks","task","tasks","call","push","err"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,IAAT,QAAqB,mBAArB;;;AAEA,MAAMC,YAAY,GAAG,QAAa;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;;AAE9B,QAAMC,SAAS,GAAG,MAAMC,EAAN,IAAa;AAC3B,UAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAvB;AACA,UAAMT,IAAI,CAACU,OAAL,CAAaL,SAAb,CAAuBC,EAAvB,EAA2BK,IAA3B,CAAgC;AAACC,MAAAA,IAAI,EAAEL,QAAQ,CAAC,CAAD;AAAf,KAAhC,CAAN;AACH,GAHD;;AAKA,QAAMM,cAAc,GAAG,MAAM;AACzB;AACA,UAAMC,YAAY,GAAG,EAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,QAAIC,CAAJ;;AACA,SAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGb,KAAhB,EAAuBa,CAAC,EAAxB,EAA2B;AAEvBC,MAAAA,kBAAkB,CAACD,CAAD,EAAIH,YAAJ,CAAlB;AAEH;;AAED,wBACQ;AAAA,gBAAKA,YAAY,CAAC,CAAD,CAAZ,CAAgBR;AAArB;AAAA;AAAA;AAAA;AAAA,YADR;AAGH,GAdD;;AAgBA,QAAMY,kBAAkB,GAAG,OAAOD,CAAP,EAAUH,YAAV,KAA2B;AAClD,QAAI;AACA,YAAMK,IAAI,GAAG,MAAMnB,IAAI,CAACU,OAAL,CAAaU,KAAb,CAAmBH,CAAnB,EAAsBI,IAAtB,EAAnB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACAL,MAAAA,YAAY,CAACQ,IAAb,CAAkBH,IAAlB;AACH,KAJD,CAKA,OAAMI,GAAN,EAAW;AACPR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH;AACJ,GATD;;AAWA,sBACI;AAAA,eACKV,cAAc,EADnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAxCD;;KAAMV,Y;AA0CN,eAAeA,YAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport todo from '../ethereum/todo.js';\nimport web3 from '../ethereum/web3';\nimport { Grid } from 'semantic-ui-react';\n\nconst DisplayTasks = ({count}) => {\n\n    const checkTask = async(id) => {\n        const accounts = await web3.eth.getAccounts();\n        await todo.methods.checkTask(id).send({from: accounts[0]});\n    }\n\n    const createTaskList = () => {\n        // const taskRows = [];\n        const initialTasks = [];\n        console.log('starting desplay task')\n        let i;\n        for (i = 1; i < count; i++){\n\n            pushToInitialTasks(i, initialTasks);\n\n        }\n\n        return (\n                <h1>{initialTasks[0].id}</h1>\n        )\n    }\n\n    const pushToInitialTasks = async (i, initialTasks) => {\n        try {\n            const task = await todo.methods.tasks(i).call();\n            console.log(task);\n            initialTasks.push(task);\n        }\n        catch(err) {\n            console.log(err);\n        }\n    }\n\n    return (\n        <div>\n            {createTaskList()}\n            hello this actually works\n        </div>\n    )\n}\n\nexport default DisplayTasks;\n\n/* {initalTasks.map((task, index) => {\n                    <React.Fragment key={index}>\n                        <h1>{task.id}</h1>\n                        <div className=\"ui left floated compact segment\">\n                            <div className=\"ui toggle checked checkbox\">\n                                <input \n                                type=\"checkbox\" \n                                name={task.id}\n                                onClick={() => checkTask(task.id)}\n                                ></input>\n                                <label>{task.content}</label>\n                            </div>\n                        </div>\n                    </ React.Fragment>\n                })} */"]},"metadata":{},"sourceType":"module"}